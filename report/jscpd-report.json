{
  "statistics": {
    "detectionDate": "2025-10-29T01:19:44.247Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/types/toolchain.ts": {
            "lines": 369,
            "tokens": 1491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/review-engine.ts": {
            "lines": 65,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/hodge-356.smoke.test.ts": {
            "lines": 225,
            "tokens": 2176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/toolchain-service.ts": {
            "lines": 640,
            "tokens": 4887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/toolchain-service.smoke.test.ts": {
            "lines": 358,
            "tokens": 3078,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 146,
            "duplicatedTokens": 1298,
            "percentage": 40.78,
            "percentageTokens": 42.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ship-service.ts": {
            "lines": 549,
            "tokens": 3806,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ship-service.test.ts": {
            "lines": 218,
            "tokens": 1929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/review-engine-service.ts": {
            "lines": 174,
            "tokens": 1157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/quality-report-generator.ts": {
            "lines": 248,
            "tokens": 1636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/harden-service.ts": {
            "lines": 106,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/harden-service.test.ts": {
            "lines": 171,
            "tokens": 1449,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 84,
            "duplicatedTokens": 560,
            "percentage": 49.12,
            "percentageTokens": 38.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/commands/harden/harden-validator.ts": {
            "lines": 103,
            "tokens": 820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/commands/harden/harden-review.ts": {
            "lines": 241,
            "tokens": 2022,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/commands/ship.ts": {
            "lines": 500,
            "tokens": 4177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/commands/review.ts": {
            "lines": 366,
            "tokens": 2808,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 111,
            "percentage": 3.83,
            "percentageTokens": 3.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/commands/review.smoke.test.ts": {
            "lines": 184,
            "tokens": 1660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/commands/harden.ts": {
            "lines": 336,
            "tokens": 2870,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 111,
            "percentage": 4.17,
            "percentageTokens": 3.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 4853,
          "tokens": 36904,
          "sources": 17,
          "clones": 9,
          "duplicatedLines": 129,
          "duplicatedTokens": 1040,
          "percentage": 2.66,
          "percentageTokens": 2.82,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 4853,
      "tokens": 36904,
      "sources": 17,
      "clones": 9,
      "duplicatedLines": 129,
      "duplicatedTokens": 1040,
      "percentage": 2.66,
      "percentageTokens": 2.82,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n          ],\n          warningCount: 0,\n          warnings: [],\n          stdout: 'mocked output',\n          stderr: '',\n        },\n      ];\n      vi.spyOn(service, 'runQualityChecks').mockResolvedValue(mockResults);\n\n      const results = await service.runQualityChecks('all');\n      const tscResult",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 207,
        "end": 218,
        "startLoc": {
          "line": 207,
          "column": 80,
          "position": 1707
        },
        "endLoc": {
          "line": 218,
          "column": 10,
          "position": 1788
        }
      },
      "secondFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 103,
          "position": 1463
        },
        "endLoc": {
          "line": 190,
          "column": 13,
          "position": 1544
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n          ],\n          warningCount: 0,\n          warnings: [],\n          stdout: 'mocked output',\n          stderr: '',\n        },\n      ];\n      vi.spyOn(service, 'runQualityChecks').mockResolvedValue(mockResults);\n\n      const results = await service.runQualityChecks('all');\n      const vitestResult",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 235,
        "end": 246,
        "startLoc": {
          "line": 235,
          "column": 41,
          "position": 1951
        },
        "endLoc": {
          "line": 246,
          "column": 13,
          "position": 2032
        }
      },
      "secondFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 179,
        "end": 190,
        "startLoc": {
          "line": 179,
          "column": 103,
          "position": 1463
        },
        "endLoc": {
          "line": 190,
          "column": 13,
          "position": 1544
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "],\n          stdout: 'mocked output',\n          stderr: '',\n        },\n      ];\n      vi.spyOn(service, 'runQualityChecks').mockResolvedValue(mockResults);\n\n      const results = await service.runQualityChecks('all');\n      const eslintResult = results.find((r) => r.tool === 'eslint');\n\n      expect(eslintResult).toBeDefined();\n      expect(eslintResult?.errorCount).toBe(1",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 264,
        "end": 275,
        "startLoc": {
          "line": 264,
          "column": 75,
          "position": 2190
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 2300
        }
      },
      "secondFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 182,
        "end": 193,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 1481
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n          stderr: '',\n        },\n      ];\n      vi.spyOn(service, 'runQualityChecks').mockResolvedValue(mockResults);\n\n      const results = await service.runQualityChecks('all');\n      const eslintResult = results.find((r) => r.tool === 'eslint');\n\n      expect(eslintResult).toBeDefined();\n      expect(eslintResult?.errorCount).toBe(0",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 291,
        "end": 301,
        "startLoc": {
          "line": 291,
          "column": 3,
          "position": 2447
        },
        "endLoc": {
          "line": 301,
          "column": 2,
          "position": 2549
        }
      },
      "secondFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 183,
        "end": 193,
        "startLoc": {
          "line": 183,
          "column": 16,
          "position": 1489
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n          stderr: '',\n        },\n      ];\n      vi.spyOn(service, 'runQualityChecks').mockResolvedValue(mockResults);\n\n      const results = await service.runQualityChecks('all');\n      const eslintResult = results.find((r) => r.tool === 'eslint');\n\n      expect(eslintResult).toBeDefined();\n      expect(eslintResult)",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 317,
        "end": 327,
        "startLoc": {
          "line": 317,
          "column": 14,
          "position": 2693
        },
        "endLoc": {
          "line": 327,
          "column": 2,
          "position": 2788
        }
      },
      "secondFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 183,
        "end": 193,
        "startLoc": {
          "line": 183,
          "column": 16,
          "position": 1489
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", async () => {\n      const mockResults = [\n        {\n          type: 'linting' as const,\n          tool: 'eslint',\n          exitCode: 0,\n          errorCount: 0,\n          errors: [],\n          warningCount: 0,\n          warnings: [],\n          stdout: '',\n          stderr: '',\n        },\n      ];\n      vi.spyOn(service, 'runQualityChecks').mockResolvedValue(mockResults);\n\n      const results = await service.runQualityChecks('all');\n      const eslintResult = results.find((r) => r.tool === 'eslint');\n\n      expect(eslintResult).toBeDefined();\n      expect(eslintResult).not",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 336,
        "end": 356,
        "startLoc": {
          "line": 336,
          "column": 46,
          "position": 2878
        },
        "endLoc": {
          "line": 356,
          "column": 4,
          "position": 3058
        }
      },
      "secondFile": {
        "name": "src/lib/toolchain-service.smoke.test.ts",
        "start": 281,
        "end": 327,
        "startLoc": {
          "line": 281,
          "column": 46,
          "position": 2364
        },
        "endLoc": {
          "line": 327,
          "column": 15,
          "position": 2790
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "},\n      {\n        type: 'type_checking' as const,\n        tool: 'tsc',\n        exitCode: 0,\n        errorCount: 0,\n        stdout: 'all good',\n      },\n      {\n        type: 'formatting' as const,\n        tool: 'prettier',\n        exitCode: 0,\n        errorCount: 0,\n        stdout: 'all good',\n      },\n    ];\n\n    const gateCheck = service.checkQualityGates(someFailedResults",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/harden-service.test.ts",
        "start": 69,
        "end": 86,
        "startLoc": {
          "line": 69,
          "column": 7,
          "position": 681
        },
        "endLoc": {
          "line": 86,
          "column": 18,
          "position": 792
        }
      },
      "secondFile": {
        "name": "src/lib/harden-service.test.ts",
        "start": 35,
        "end": 52,
        "startLoc": {
          "line": 35,
          "column": 2,
          "position": 412
        },
        "endLoc": {
          "line": 52,
          "column": 17,
          "position": 523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "},\n      {\n        type: 'linting' as const,\n        tool: 'eslint',\n        exitCode: 0,\n        errorCount: 0,\n        stdout: 'no lint errors',\n      },\n      {\n        type: 'type_checking' as const,\n        tool: 'tsc',\n        exitCode: 0,\n        errorCount: 0,\n        stdout: 'no type errors',\n      },\n      {\n        type: 'formatting' as const,\n        tool: 'prettier',\n        exitCode: 0,\n        errorCount: 0,\n        stdout: 'formatting ok',\n      },\n    ];\n\n    const reportData = service.generateReportData('test-feature', validationResults, {\n      skipTests: true",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/harden-service.test.ts",
        "start": 142,
        "end": 167,
        "startLoc": {
          "line": 142,
          "column": 2,
          "position": 1250
        },
        "endLoc": {
          "line": 167,
          "column": 5,
          "position": 1419
        }
      },
      "secondFile": {
        "name": "src/lib/harden-service.test.ts",
        "start": 102,
        "end": 127,
        "startLoc": {
          "line": 102,
          "column": 7,
          "position": 911
        },
        "endLoc": {
          "line": 127,
          "column": 6,
          "position": 1080
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n    const toolchainService = new ToolchainService();\n    const importAnalyzer = new ImportAnalyzer();\n    const severityExtractor = new SeverityExtractor();\n    const criticalFileSelector = new CriticalFileSelector(importAnalyzer, severityExtractor);\n    const toolRegistryLoader = new ToolRegistryLoader();\n\n    this.reviewEngineService = new ReviewEngineService(\n      manifestGenerator,\n      toolchainService,\n      criticalFileSelector,\n      toolRegistryLoader\n    );\n\n    // Initialize modules",
      "tokens": 0,
      "firstFile": {
        "name": "src/commands/harden.ts",
        "start": 51,
        "end": 65,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 467
        },
        "endLoc": {
          "line": 65,
          "column": 22,
          "position": 578
        }
      },
      "secondFile": {
        "name": "src/commands/review.ts",
        "start": 61,
        "end": 75,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 351
        },
        "endLoc": {
          "line": 75,
          "column": 5,
          "position": 462
        }
      }
    }
  ]
}