{
  "feature": "HODGE-359.1",
  "timestamp": "2025-10-29T01:19:59.059Z",
  "issueId": null,
  "pmTool": "linear",
  "validationPassed": true,
  "qualityResults": [
    {
      "type": "type_checking",
      "tool": "typescript",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 0,
      "errors": [],
      "warnings": [],
      "stdout": "",
      "stderr": ""
    },
    {
      "type": "linting",
      "tool": "eslint",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 0,
      "errors": [],
      "warnings": [],
      "stdout": "/Users/michaelkelly/Projects/hodge/src/commands/review.smoke.test.ts: line 0, col 0, Warning - File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override.\n/Users/michaelkelly/Projects/hodge/src/commands/ship.ts: line 25, col 3, Warning - Async method 'execute' has too many lines (58). Maximum allowed is 50. (max-lines-per-function)\n/Users/michaelkelly/Projects/hodge/src/commands/ship.ts: line 259, col 10, Warning - Complete the task associated to this \"TODO\" comment. (sonarjs/todo-tag)\n/Users/michaelkelly/Projects/hodge/src/lib/harden-service.test.ts: line 0, col 0, Warning - File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override.\n/Users/michaelkelly/Projects/hodge/src/lib/ship-service.test.ts: line 0, col 0, Warning - File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override.\n/Users/michaelkelly/Projects/hodge/src/lib/toolchain-service.smoke.test.ts: line 0, col 0, Warning - File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override.\n/Users/michaelkelly/Projects/hodge/src/lib/toolchain-service.ts: line 604, col 1, Warning - File has too many lines (427). Maximum allowed is 400. (max-lines)\n/Users/michaelkelly/Projects/hodge/src/test/hodge-356.smoke.test.ts: line 0, col 0, Warning - File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override.\n/Users/michaelkelly/Projects/hodge/src/types/toolchain.ts: line 155, col 6, Warning - Complete the task associated to this \"TODO\" comment. (sonarjs/todo-tag)\n\n9 problems\n",
      "stderr": ""
    },
    {
      "type": "testing",
      "tool": "vitest",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 0,
      "errors": [],
      "warnings": [],
      "stdout": "\n RUN  v3.2.4 /Users/michaelkelly/Projects/hodge\n\n·····················································································································································································································································································································································································································································································································································································································································{\"level\":\"warn\",\"time\":\"2025-10-29T01:19:55.489Z\",\"name\":\"pm-adapter\",\"timestamp\":\"2025-10-29T01:19:55.488Z\",\"enableConsole\":false,\"msg\":\"Failed to load PM overrides\"}\n················{\"level\":\"info\",\"time\":\"2025-10-29T01:19:55.501Z\",\"msg\":\"Process terminated\"}\n························································································································································································································································································································································································································································································································································································································································································································\n\n Test Files  131 passed (131)\n      Tests  1341 passed (1341)\n   Start at  18:19:44\n   Duration  14.73s (transform 2.39s, setup 0ms, collect 15.18s, tests 36.54s, environment 20ms, prepare 10.59s)\n\n",
      "stderr": "(node:74284) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:74286) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\nfatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\nfatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\nfatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\nfatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\nfatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'\n(node:74695) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:74841) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:74932) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75042) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\nfatal: No names found, cannot describe anything.\nfatal: No names found, cannot describe anything.\n(node:75457) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75514) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75640) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75655) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75737) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75801) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75811) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75823) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75826) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75844) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n- Detecting project configuration...\n✔ Project detection complete\n- Creating Hodge structure...\n✔ Hodge structure created successfully\n- Detecting development tools...\n⚠ No development tools detected\n- Detecting project technologies...\n⚠ No review profiles with detection rules found\n- Detecting project configuration...\n✔ Project detection complete\n- Creating Hodge structure...\n✔ Hodge structure created successfully\n- Detecting development tools...\n⚠ No development tools detected\n- Detecting project technologies...\n⚠ No review profiles with detection rules found\n- Detecting project configuration...\n✔ Project detection complete\n- Creating Hodge structure...\n✔ Hodge structure created successfully\n- Detecting development tools...\n⚠ No development tools detected\n- Detecting project technologies...\n⚠ No review profiles with detection rules found\n- Detecting project configuration...\n✔ Project detection complete\n- Creating Hodge structure...\n✔ Hodge structure created successfully\n- Detecting development tools...\n⚠ No development tools detected\n- Detecting project technologies...\n⚠ No review profiles with detection rules found\n(node:75883) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75946) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:75969) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:76004) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:76018) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n(node:76053) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n"
    },
    {
      "type": "formatting",
      "tool": "prettier",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 0,
      "errors": [],
      "warnings": [],
      "stdout": "Checking formatting...\nAll matched files use Prettier code style!\n",
      "stderr": ""
    },
    {
      "type": "complexity",
      "tool": "none",
      "skipped": true,
      "reason": "No tools configured for this check type"
    },
    {
      "type": "code_smells",
      "tool": "none",
      "skipped": true,
      "reason": "No tools configured for this check type"
    },
    {
      "type": "duplication",
      "tool": "jscpd",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 0,
      "errors": [],
      "warnings": [],
      "stdout": "\u001b[32mJSON report saved to report/jscpd-report.json\u001b[39m\nDuplications detection: Found \u001b[1m9\u001b[22m exact clones with \u001b[1m129\u001b[22m(2.66%) duplicated lines in \u001b[1m17\u001b[22m (1 formats) files.\n",
      "stderr": ""
    },
    {
      "type": "architecture",
      "tool": "dependency-cruiser",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 2,
      "errors": [],
      "warnings": [
        "\n  warn no-orphans: ",
        "  warn no-circular: "
      ],
      "stdout": "\n  warn no-orphans: src/lib/claude-commands.ts\n  warn no-circular: src/commands/harden.ts → \n      src/commands/harden/harden-validator.ts →\n      src/commands/harden.ts\n\nx 2 dependency violations (0 errors, 2 warnings). 68 modules, 251 dependencies cruised.\n\n",
      "stderr": ""
    },
    {
      "type": "security",
      "tool": "semgrep",
      "exitCode": 0,
      "errorCount": 0,
      "warningCount": 0,
      "errors": [],
      "warnings": [],
      "stdout": "",
      "stderr": ""
    }
  ],
  "commitMessage": "feat(toolchain): add regex extraction for structured validation results\n\n## What Changed\n- Added `error_pattern` and `warning_pattern` fields to tool-registry.yaml for all 7 tools (typescript, eslint, vitest, prettier, jscpd, dependency-cruiser, semgrep)\n- Enhanced `ToolRegistryEntry` and `ToolCommand` interfaces with pattern fields\n- Updated `RawToolResult` interface with structured extraction fields:\n  - Added `exitCode`, `errorCount`, `warningCount` fields\n  - Added `errors[]` and `warnings[]` string arrays\n  - Removed deprecated `success` field (exit codes unreliable - dependency-cruiser uses non-zero for warnings)\n- Modified ToolchainService to apply regex patterns and extract structured data\n- Updated 5 test files to use `errorCount` instead of deprecated `success` field\n- Fixed prettier error pattern to match only file paths, not success messages\n- Fixed dependency-cruiser config to exclude data files (.yaml, .json, .md)\n- Updated toolchain execution commands for safer error handling (|| true for tools with non-zero warning exits)\n- Cleaned up 2 backup files (pm-hooks.original.bak, structure-generator.ts.bak)\n\n## Why This Change\nThis infrastructure enables the parent feature (HODGE-359) to replace verbose quality-checks.md with token-efficient validation-results.json. By extracting structured error/warning data via regex patterns, AI can make quality gate decisions without parsing full tool output, reducing token usage by ~70-80%.\n\nSince Hodge controls tool output formats via toolchain.yaml configuration (compact formats, no ANSI codes), regex patterns can be simple and reliable rather than handling arbitrary format variations.\n\n## Impact\n- Token efficiency: Structured counts and arrays replace verbose markdown reports\n- Dynamic quality gates: All 7 configured tools have extraction patterns from day one\n- Reliable validation: Error counts provide source of truth (not unreliable exit codes)\n- Maintainable: Patterns centralized in tool-registry.yaml with clear tool-specific comments\n- Testable: Uses mocked stdout strings respecting subprocess/toolchain execution bans (HODGE-317.1, HODGE-357.1)\n- Production ready: All 1340 tests passing, all quality gates passing\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>"
}